/*!
* cutlery.js 1.1.0 - https://github.com/lennertderyck/cutleryjs
* Licensed under the GNU GPLv3 license - https://choosealicense.com/licenses/gpl-3.0/#
*
* Copyright (c) 2020 Lennert De Ryck
*/

const node=(e,o=!1)=>0==o?document.querySelector(e):document.querySelectorAll(e);class Element{constructor(e){if("string"!=typeof e)throw new Error("The tagname of this new element is not of the type string");try{this.el=document.createElement(e)}catch(e){console.error("Something went wrong when creating a new element. We logged the error message for you convenience:"),console.log(e)}}class(e){if("object"!=typeof e)throw new Error("You should use an array for adding classes to an element");try{e.map(e=>this.el.classList.add(e))}catch(e){console.error("Something went wrong when adding classes. We logged this element and the error message for you convenience:"),console.log(e),console.log(this.el)}}attributes(e){if("object"!=typeof e)throw new Error("You should use an array for adding attributes to an element");try{e.map(e=>this.el.setAttribute(e[0],e[1]))}catch(e){console.error("Something went wrong when adding attribtues. We logged this element and the error message for you convenience:"),console.log(e),console.log(this.el)}}inner(e){this.el.innerHTML=e}log(){console.log(this.el)}append(e="html body",o="selector"){"string"==typeof e?e=document.querySelector(e):"object"==typeof e&&(e=e);try{e.appendChild(this.el)}catch(e){console.error("Something went wrong when adding an element. You've probably entered a wrong selector or node element. We logged this element and the error message for you convenience:"),console.log(e),console.log(this.el)}}return(){return this.el}}const eventCallback=(e,o,t=!0)=>{let n=null;n=1==t?event.target.closest(`[data-action="${e}"]`):event.target.closest(e),n&&o(n)};