/*
* cutlery.js 3.6.0 - https://github.com/lennertderyck/cutleryjs
* Licensed under the GNU GPLv3 license - https://choosealicense.com/licenses/gpl-3.0/#
*
* Copyright (c) 2021 Lennert De Ryck
*/

export const node=(e,t=!1)=>{const n=document.querySelectorAll(e);return 0==t?n[0]:n};export class Element{constructor(e){if("string"!=typeof e)throw new Error("The tagname of this new element is not of the type string");try{this.el=document.createElement(e)}catch(e){console.error("Something went wrong when creating a new element. We logged the error message for you convenience:"),console.log(e)}this.content=""}class(e){if("object"!=typeof e)throw new Error("You should use an array for adding classes to an element");try{e.map(e=>this.el.classList.add(e))}catch(e){console.error("Something went wrong when adding classes. We logged this element and the error message for you convenience:"),console.log(e),console.log(this.el)}}attributes(e){if("object"!=typeof e)throw new Error("You should use an array for adding attributes to an element");try{e.map(e=>this.el.setAttribute(e[0],e[1]))}catch(e){console.error("Something went wrong when adding attribtues. We logged this element and the error message for you convenience:"),console.log(e),console.log(this.el)}}inner(e){this.el.innerHTML=e||this.content}log(){console.log(this.el)}append(e="html body"){"string"==typeof e?e=returnNode(e):"object"==typeof e&&(e=e);try{e.appendChild(this.el)}catch(e){console.error("Something went wrong when adding an element. You've probably entered a wrong selector or node element. We logged this element and the error message for you convenience:"),console.log(e),console.log(this.el)}}prepend(e="html body"){"string"==typeof e?e=returnNode(e):"object"==typeof e&&(e=e);try{e.prepend(this.el)}catch(e){console.error("Something went wrong when adding an element. You've probably entered a wrong selector or node element. We logged this element and the error message for you convenience:"),console.log(e),console.log(this.el)}}return(e){return this.el}}export const eventCallback=(e,t,n=!0)=>{let o=null;try{o=1==n?event.target.closest(`[data-action="${e}"]`):event.target.closest(e),o&&t(o)}catch(e){console.error("Something went wrong on event callback. Use the correct selector â€“ Didn't use the [data-action] selector? Add false as third argument")}};export const getFormData=e=>{const t=new Set,n=new FormData(e),o=new Map;return e.querySelectorAll("input[name], select[name], textarea[name], datalist[name], output[name]").forEach(e=>{const n=returnTag(e),o=e.getAttribute("type");t.add({name:e.getAttribute("name"),type:o||n})}),t.forEach(e=>{const t=n.getAll(e.name);"number"==e.type?o.set(e.name,parseFloat(t[0])):"checkbox"==e.type?o.set(e.name,null!=t&&("on"==t||t)):o.set(e.name,t[0])}),o};export const cookies={set(e,t,n){if(n){const e=new Date;e.setTime(e.getTime()+24*n*60*60*1e3);var o="expires="+e.toGMTString()}else o="";document.cookie=`${e}=${t}; ${o}; path=/`},get(e){const t=e+"=",n=document.cookie.split(";");for(var o=0;o<n.length;o++){for(var r=n[o];" "==r.charAt(0);)r=r.substring(1,r.length);if(0==r.indexOf(t))return r.substring(t.length,r.length)}return null}};export const fetchAPI={async json(e,t={method:"GET"}){try{let n=await fetch(e,t);return await n.json()}catch{throw new Error("Something went really wrong fetching this api",e)}},async text(e,t={method:"GET"}){try{let n=await fetch(e,t);return await n.text()}catch{throw new Error("Something went really wrong fetching this api",e)}},async html(e){}};export class Api{constructor(e,t={method:"GET"}){this.url=e,this.options=t}async fetch(e=this.options){try{return this.response=await fetch(this.url,this.options),this.response}catch{throw new Error("Something went really wrong fetching this api",url)}}async status(){return await this.fetch()}async JSON(){return(await this.fetch()).json()}async TEXT(){return(await this.fetch()).text()}}export class LocalDB{constructor(e){this.name=e,this.data=[],0==this.exist()&&window.localStorage.setItem(e,JSON.stringify({name:this.name,data:this.data}))}getData(){const e=window.localStorage.getItem(this.name);return e?JSON.parse(e).data:"There is no localStorage item with this name"}exist(){const e=window.localStorage.getItem(this.name);return e||!1}detatch(){return window.localStorage.removeItem(this.name),console.log(`local database '${this.name}' removed`),this.name}store(e){window.localStorage.setItem(this.name,JSON.stringify({name:this.name,data:e}))}addMeta(e){e.map(e=>{e.__id=(new Date).getTime()})}add(e,t){const n=this.getData(),o=0==Array.isArray(e)?[e]:e;this.addMeta(o),this.data=(Array.isArray(e),[...n,...o]),this.store(this.data),t&&t()}update(e,t,n){this.getData();const o=this.item({__id:e});Object.keys(t).map(e=>{console.log(t[e]),console.log(o[e])}),n&&n();for(const t=0;t<o.length;t++)if(o[t].__id===e)return void(o[t].Username=newValue)}remove(e,t){const n=this.getData(),o=Object.keys(e)[0],r=n.findIndex(t=>t[o]==e[o]);n.splice(r,1),this.store(n),t&&t()}item(e){const t=this.getData(),n=Object.keys(e)[0];return t.find(t=>t[n]==e[n])}count(){return this.getData().length}empty(){this.store([])}}export const returnNode=(e,t=!1)=>{if("object"==typeof e)return e;if("string"==typeof e){const n=document.querySelectorAll(e);return 0==t?n[0]:n}};export const returnTag=e=>returnNode(e).tagName.toLowerCase();export const fieldTypes=e=>{const t=new Map,n=returnNode(e),o=returnTag(e);if("form"==o){return n.querySelectorAll("input, textarea").forEach(e=>{e.type&&e.name?t.set(e.name,e.type):"textarea"==returnTag(e)?t.set(e.name,"textarea"):t.set("no name",e.type)}),t}return"input"==o&&n.type?n.type:"textarea"==o?"textarea":"no element found or type specified"};export const connection={state(){const e=window.navigator.onLine,t=e?navigator.connection.effectiveType:e;return console.log("Connection types:\n0: offline\n1: slow\n2: good\n3: strong"),{false:0,"slow-2g":1,"2g":1,"3g":2,"4g":3}[t]},watch(e=null){navigator.connection.addEventListener("change",()=>{const t=connection.state();e(t)})}};export class Toast{constructor({title:e,content:t,timer:n=6e3,classes:o=[],attributes:r=[]}){this.toast=new Element("div"),this.toast.class(["toast","animate__animated","animate__fadeInUp","animate__faster",...o]),this.toast.inner(`\n            <div class="toast__wrapper">\n                <div class="toast__controls">\n                <div data-action="closeToast">\n                    <i class='bx bx-x'></i>\n                </div>\n                </div>\n                <div class="toast__content">\n                <h5 class="toast__title">${e}</h5>\n                <div class="toast__body">\n                    <p>${t}</p>\n                </div>\n                </div>\n            </div>\n            <div class="toast__timer"></div>\n        `),this.toast.attributes([["style",`--timer-duration: ${n}ms`]]),this.toast.append("#toasts .toasts__wrapper"),setTimeout(()=>{fadeOutNode(this.toast.return())},n),setTimeout(()=>{this.toast.return().remove()},n+2e3)}}const fadeOutNode=e=>{e.classList.remove("animate__fadeInUp"),e.classList.add("animate__fadeOutDown")};export const updateClipboard=async e=>{const{state:t}=await navigator.permissions.query({name:"clipboard-write"});if("granted"==t||"prompt"==t)try{await navigator.clipboard.writeText(e),console.log("copied")}catch(e){console.error(e)}};export const linkRouting=(e,t="")=>{returnNode(e);const n=e.href,o=window.location.href.replace(window.location.hash,"")+t;n.startsWith(o)?window.open(n,"_self"):window.open(n,"_blank")};Node.prototype.on=function(e){const t=e.startsWith("on"),n=void 0===this[e];if(e=0==t?"on"+e:e,0==n)throw new Error(`This type of event (${e}) doesn't exist`);return t=>this[e]=t};export class AppErr{constructor(e){this.send(e)}async send({title:e=null,message:t=null,url:n=window.location.href,error:o=null}){const r=await fetch(`http://err.lennertderyck.be/api/new?title=${e}&message=${t}&url=${n}&error=${o}`);r.error?console.log("Something went wrong when logging error",await r.json()):console.log("New app-error logged",await r.json())}}