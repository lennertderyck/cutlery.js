/*
* cutlery.js 2.1.3 - https://github.com/lennertderyck/cutleryjs
* Licensed under the GNU GPLv3 license - https://choosealicense.com/licenses/gpl-3.0/#
*
* Copyright (c) 2020 Lennert De Ryck
*/

"use strict";function s4(){return Math.round((new Date).getTime()*Math.random()).toString(16).substr(0,4)}function ramdomNumber(e){return Math.floor(Math.random()*e)}function defaultId(){const e=["-","_","@","#","$","%","^","&","*"],{length:t}=e;return s4()+e[ramdomNumber(t)]+s4()+e[ramdomNumber(t)]+s4()+e[ramdomNumber(t)]+s4()+e[ramdomNumber(t)]+s4()}function thinid(e){if(!e||e<=0)return defaultId();const t=defaultId().length,n=e%t,r=Math.floor(e/t);let o=defaultId().substr(0,n);for(let e=0;e<r;e++)o+=defaultId();return o}Object.defineProperty(exports,"__esModule",{value:!0});export const node=(e,t=!1)=>{const n=document.querySelectorAll(e);return 0==t?n[0]:n};export class Element{constructor(e){if("string"!=typeof e)throw new Error("The tagname of this new element is not of the type string");try{this.el=document.createElement(e)}catch(e){console.error("Something went wrong when creating a new element. We logged the error message for you convenience:"),console.log(e)}this.content=""}class(e){if("object"!=typeof e)throw new Error("You should use an array for adding classes to an element");try{e.map(e=>this.el.classList.add(e))}catch(e){console.error("Something went wrong when adding classes. We logged this element and the error message for you convenience:"),console.log(e),console.log(this.el)}}attributes(e){if("object"!=typeof e)throw new Error("You should use an array for adding attributes to an element");try{e.map(e=>this.el.setAttribute(e[0],e[1]))}catch(e){console.error("Something went wrong when adding attribtues. We logged this element and the error message for you convenience:"),console.log(e),console.log(this.el)}}inner(e){this.el.innerHTML=e||this.content}log(){console.log(this.el)}append(e="html body"){"string"==typeof e?e=returnNode(e):"object"==typeof e&&(e=e);try{e.appendChild(this.el)}catch(e){console.error("Something went wrong when adding an element. You've probably entered a wrong selector or node element. We logged this element and the error message for you convenience:"),console.log(e),console.log(this.el)}}prepend(e="html body"){"string"==typeof e?e=returnNode(e):"object"==typeof e&&(e=e);try{e.prepend(this.el)}catch(e){console.error("Something went wrong when adding an element. You've probably entered a wrong selector or node element. We logged this element and the error message for you convenience:"),console.log(e),console.log(this.el)}}return(e){return this.el}}export const eventCallback=(e,t,n=!0)=>{let r=null;r=1==n?event.target.closest(`[data-action="${e}"]`):event.target.closest(e),r&&t(r)};export const getFormData=e=>{const t=new Set,n=new FormData(e),r=new Map;return e.querySelectorAll("[name]").forEach(e=>{t.add({name:e.getAttribute("name"),type:e.getAttribute("type")||"textarea"})}),t.forEach(e=>{r.set(e.name,"number"==e.type?parseFloat(n.get(e.name)):n.get(e.name))}),r};export const cookies={set(e,t,n){if(n){const e=new Date;e.setTime(e.getTime()+24*n*60*60*1e3);var r="expires="+e.toGMTString()}else r="";document.cookie=`${e}=${t}; ${r}; path=/`},get(e){const t=e+"=",n=document.cookie.split(";");for(var r=0;r<n.length;r++){for(var o=n[r];" "==o.charAt(0);)o=o.substring(1,o.length);if(0==o.indexOf(t))return o.substring(t.length,o.length)}return null}};export const fetchAPI={async json(e,t={method:"GET"}){try{let n=await fetch(e,t);return await n.json()}catch{throw new Error("Something went really wrong fetching this api",e)}},async text(e,t={method:"GET"}){try{let n=await fetch(e,t);return await n.text()}catch{throw new Error("Something went really wrong fetching this api",e)}},async html(e){}};export class Api{constructor(e,t={method:"GET"}){this.url=e,this.options=t}async fetch(e=this.options){try{return this.response=await fetch(url,e),this.response}catch{throw new Error("Something went really wrong fetching this api",url)}}async JSON(){return this.data=await this.response.json(),this.data}async TEXT(){return this.data=await this.response.text(),this.data}async HTML(){const e=this.TEXT(),t=new Element("template");return t.inner(e),t}}export class LocalDB{constructor(e){this.name=e,this.data=[],0==this.exist()&&window.localStorage.setItem(e,JSON.stringify({name:this.name,data:this.data}))}getData(){const e=window.localStorage.getItem(this.name);return e?JSON.parse(e).data:"There is no localStorage item with this name"}exist(){const e=window.localStorage.getItem(this.name);return e||!1}detatch(){return window.localStorage.removeItem(this.name),console.log(`local database '${this.name}' removed`),this.name}store(e){window.localStorage.setItem(this.name,JSON.stringify({name:this.name,data:e}))}addMeta(e){e.map(e=>{e.__id=thinid(11)})}add(e,t){const n=this.getData(),r=0==Array.isArray(e)?[e]:e;this.addMeta(r),this.data=(Array.isArray(e),[...n,...r]),this.store(this.data),t&&t()}remove(e,t){const n=this.getData(),r=Object.keys(e)[0],o=n.findIndex(t=>t[r]==e[r]);n.splice(o,1),this.store(n),t&&t()}item(e){const t=this.getData(),n=Object.keys(e)[0];return t.find(t=>t[n]==e[n])}count(){return this.getData().length}empty(){this.store([])}}export const returnNode=(e,t=!1)=>{if("node"==typeof e)return e;if("string"==typeof e){const n=document.querySelectorAll(e);return 0==t?n[0]:n}};export const returnTag=e=>returnNode(e).tagName.toLowerCase();export const fieldTypes=e=>{const t=new Map,n=returnNode(e),r=returnTag(e);if("form"==r){return n.querySelectorAll("input, textarea").forEach(e=>{e.type&&e.name?t.set(e.name,e.type):"textarea"==returnTag(e)?t.set(e.name,"textarea"):t.set("no name",e.type)}),t}return"input"==r&&n.type?n.type:"textarea"==r?"textarea":"no element found or type specified"};